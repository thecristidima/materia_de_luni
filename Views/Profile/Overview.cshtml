@using Newtonsoft.Json
@model CrossRef.Services.DataVisualisation.ViewModels.ProfileViewModel
@{
    var data = "";
    if (Model != null && Model.Articles != null && Model.Articles.Count > 0)
    {
        var years = Model.Articles.Select(a => a.YearOfPublication).Distinct().ToList();
        years.Sort();

        data = JsonConvert.SerializeObject(years.Select(year =>
            new[] {year, Model.Articles.Count(article => article.YearOfPublication == year)}));
    }
}

@if (Model == null) // We're on our page
{
    <h1>Your Profile</h1>

    <br/>
    <br/>
    <a asp-controller="Profile" asp-action="Settings">Change personal information</a>
    <br/>
    <a asp-controller="Permissions" asp-action="Permissions">Choose what information to display on your profile page</a>
    <br/>
    <a asp-controller="Profile" asp-action="Articles">View your published articles from Crossref</a>
}
else // We're on someone else's profile page
{
    <h1>@Model.FirstName @Model.LastName's Profile</h1>

    <div class="profile-page-container">

        <div class="profile-page-entry">
            <h3>Biography</h3>
            @if (!Model.ShowBiography)
            {
                <i>This user hasn't made their biography public.</i>
            }
            else
            {
                if (string.IsNullOrEmpty(Model.Biography))
                {
                    <i>This user hasn't added their biography yet.</i>
                }
                else
                {
                    <a>@Model.Biography</a>
                }
            }
        </div>

        @if (Model.ShowAffiliation)
        {
            <div class="profile-page-entry">
                <h3>Affiliation</h3>
                @if (string.IsNullOrEmpty(Model.Affiliation))
                {
                    <i>This user hasn't added their affiliation yet.</i>
                }
                else
                {
                    <b>@Model.Affiliation</b>
                }
            </div>
        }

        @if (Model.ShowDateOfBirth)
        {
            <div class="profile-page-entry">
                <h3>Date of birth</h3>
                <b>@Model.DateOfBirth.ToShortDateString()</b>
            </div>
        }

        @if (Model.ShowArticles)
        {
            <div class="profile-page-entry">
                <h3>Articles</h3>
                @if (Model.Articles.Count == 0)
                {
                    <i>This user hasn't added any articles to their profile.</i>
                }
                else
                {
                    <i>This user has published @Model.Articles.Count articles.</i>
                }

                <div class="article-chart-container">
                    <div id="article-chart" class="article-chart"></div>
                </div>
            </div>
            if (Model.Articles.Count > 0)
            {
                <div class="article-table-container">
                    <table id="article-table" class="table table-striped table-bordered table-sm" cellspacing="0" width="100%">
                        <thead>
                        <th class="th-sm">Title</th>
                        <th class="th-sm">Publication year</th>
                        <th class="th-sm">DOI</th>
                        </thead>
                        <tbody>
                        @foreach (var article in Model.Articles)
                        {
                            <tr>
                                <td>@article.Title</td>
                                <td>@article.YearOfPublication</td>
                                <td>
                                    <a href="https://www.doi.org/@article.DOI">@article.DOI</a>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
        }
    </div>
}

@section scripts {

    <script>
        google.charts.load("current", { "packages": ["bar"] });
        google.charts.setOnLoadCallback(function() {
            
            if (!(@data).length) return;
        

            var dataArr = (@data).map(data => [data[0].toString(), data[1]]);
            var arr = [["Year", "Published Articles"]].concat(dataArr);
            
           var data = new google.visualization.arrayToDataTable(arr);

           var options = {
               title: "Published articles per year",
               width: document.getElementsByClassName("profile-page-entry")[0].offsetWidth,
               legend: {
                   position: "none"
               },
               chart: {
                   title: "Published articles per year"
               },
               bars: "vertical",
               axes: {
                   x: {
                       0: {
                           side: "bottom",
                           label: "# of articles"
                       }
                   }
               },
               bar: {
                   groupWidth: "90%"
               }
           };

           var chart = new google.charts.Bar(document.getElementById("article-chart"));
           chart.draw(data, options);
        });
    </script>
    <script>
            $("#article-table").DataTable();
            $(".dataTables_length").addClass("bs-select");
    </script>
}